import PouchDB from 'pouchdb';
import { Document as LangchainDocument } from "langchain/document";
import { shortAddress } from "../utils/string.js"

// Handles individual account documents & credits


class Document {

    constructor(address) {
        this.address = address
        this.pouch = new PouchDB(address)
    }

    getUserInfo = async () => {
        try {
            const entry = await this.pouch.get("info")
            return this.insertDailyCredits(entry)
        } catch (e) {

            const newEntry = {
                _id: "info",
                name: shortAddress(this.address),
                credits: 30,
                created: new Date().valueOf(),
                messages: [
                    "An initial credit of 30 credits has been applied to your account"
                ],
                timestamps: [
                    new Date().valueOf()
                ]
            }

            const { rev } = await this.pouch.put(newEntry)

            return {
                ...item,
                _rev: rev
            }
        }
    }

    insertDailyCredits = (data) => {
        const yesterday = new Date(new Date().setDate(new Date().getDate() - 1));
        const yesterdayTs = yesterday.valueOf()

        const dailyCount = data.timestamps.filter(item => item > yesterdayTs).length

        if (dailyCount === 0) {
            data.messages = data.messages.push("Youâ€™ve received your 5 free daily credits")
            data.timestamps = data.timestamps.push(new Date().valueOf())
        }

        return data
    }



}

export default Document